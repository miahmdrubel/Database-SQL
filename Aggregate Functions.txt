***Table:Orders

ord_no      purch_amt   ord_date    customer_id  salesman_id
----------  ----------  ----------  -----------  -----------
70001       150.5       2012-10-05  3005         5002
70009       270.65      2012-09-10  3001         5005
70002       65.26       2012-10-05  3002         5001
70004       110.5       2012-08-17  3009         5003
70007       948.5       2012-09-10  3005         5002
70005       2400.6      2012-07-27  3007         5001
70008       5760        2012-09-10  3002         5001
70010       1983.43     2012-10-10  3004         5006
70003       2480.4      2012-10-10  3009         5003
70012       250.45      2012-06-27  3008         5002
70011       75.29       2012-08-17  3003         5007
70013       3045.6      2012-04-25  3002         5001

***Write a SQL statement to find the total purchase amount of all orders.

select sum( purch_amt) as Total Purchase Amount
from Orders;

***. Write a SQL statement to find the average purchase amount of all orders.
 select avg(purch_amt)
 from Orders;

 *** Write a SQL statement to find the number of salesmen currently listing for all of their customers

   select  count(Distinct salesman_id)
   from orders;

*** Table:Customers
customer_id |   cust_name    |    city    | grade | salesman_id 
-------------+----------------+------------+-------+-------------
        3002 | Nick Rimando   | New York   |   100 |        5001
        3007 | Brad Davis     | New York   |   200 |        5001
        3005 | Graham Zusi    | California |   200 |        5002
        3008 | Julian Green   | London     |   300 |        5002
        3004 | Fabian Johnson | Paris      |   300 |        5006
        3009 | Geoff Cameron  | Berlin     |   100 |        5003
        3003 | Jozy Altidor   | Moscow     |   200 |        5007
        3001 | Brad Guzan     | London     |       |        5005
***Write a SQL statement know how many customer have listed their names

select count(Distinct customer_id)
from customers;


*** Write a SQL statement find the number of customers who gets at least a gradation for his/her performance. 

select count(grade)
from customers;

*** Write a SQL statement to get the maximum purchase amount of all the orders

select max(purch_amt)
from orders;


*** Write a SQL statement to get the minimum purchase amount of all the orders

select min(purch_amt)
from orders;

***Write a SQL statement which selects the highest grade for each of the cities of the customers.    

select max(grade),cust_name,city
from customers
group by city;


***Write a SQL statement to find the highest purchase amount ordered by the each customer with their ID and highest purchase amount.

select max(purch_amt),customer_id
from orders
group by customer_id;

***Write a SQL statement to find the highest purchase amount ordered by the each customer on a particular date with their ID, order date and highest purchase amount. 

select max(purch_amt),customer_id,ord_date
from orders
group by customer_id,ord_date;

*** Write a SQL statement to find the highest purchase amount on a date '2012-08-17' for each salesman with their ID.  

select max(purch_amt),salesman_id
from orders
where ord_date = "2012-08-17";
group by salesman_id;

***Write a SQL statement to find the highest purchase amount with their ID and order date, for only those customers who have highest purchase amount in a day is more than 2000. 

select max(purch_amt),ord_date,customer_id
from orders
where max(purch_amt) > 2000
group by ord_date,customer_id;


***Write a SQL statement to find the highest purchase amount with their ID and order date, for those customers who have a higher purchase amount in a day is within the range 2000 and 6000.

select max(purch_amt),customer_id,ord_date
from orders
group by ord_date
having max(purch_amt) between 2000 and 6000;

***Write a SQL statement to find the highest purchase amount with their ID and order date, for only those customers who have a higher purchase amount in a day is within the list 2000, 3000, 5760 and 6000.

select max(purch_amt),customer_id,ord_date
from orders
group by customer_id, ord_date
having max(purch_amt) in(2000,3000,5760,6000);


***Write a SQL statement to find the highest purchase amount with their ID, for only those customers whose ID is within the range 3002 and 3007.
select max(purch_amt),customer_id
from orders
where customer_id in (3002,3007)
group by customer_id;

***Write a SQL statement to display customer details (ID and purchase amount) whose IDs are within the range 3002 and 3007 and highest purchase amount is more than 1000.

select max(purch_amt),customer_id
from orders
where ((customer_id between 3002 and 3007) and (max(purch_amt > 1000)))
group by customer_id;


***Write a SQL statement to find the highest purchase amount with their ID, for only those salesmen whose ID is within the range 5003 and 5008.

select max(purch_amt),customer_id
from orders
where customer_id between 5003 and 5008
group by salesman_id;


*** Write a SQL statement that counts all orders for a date August 17th, 2019

 select count(order_id)
 from orders
 where ord_date = "17-08-2019"
 group by ord_date;

 *** Write a SQL statement that count the number of salesmen for whom a city is specified. Note that there may be spaces or no spaces in the city column if no city is specifie

 select count(distinct salesman_id),city
 from salesman
 where city is not null;

 *** Write a query that counts the number of salesmen with their order date and ID registering orders for each day.

 select count(salesman_id),order_date,ord_id
 from orders
 group by ord_date,salesman_id;


***Table:items

 PRO_ID PRO_NAME                   PRO_PRICE    PRO_COM
------- ------------------------- ---------- ----------
    101 Mother Board                    3200         15
    102 Key Board                        450         16
    103 ZIP drive                        250         14
    104 Speaker                          550         16
    105 Monitor                         5000         11
    106 DVD drive                        900         12
    107 CD drive                         800         12
    108 Printer                         2600         13
    109 Refill cartridge                 350         13
    110 Mouse                            250         12

 ***Write a SQL query to calculate the average price of all the products.
 select avg(pro_price),pro_name
 from items
 order by pro_price desc;


 *** Write a SQL query to find the number of products with a price more than or equal to Rs.350. 
 
  select count(pro_id),pro_name
  from items
  where pro_price >=350;




